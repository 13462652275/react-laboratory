{"version":3,"sources":["layouts/LayLogin/index.js","layouts/LayLogin/LayLogin.jsx","pages/Login/Login.jsx","pages/Login/index.js"],"names":["LayLogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getContext","context","canvas","strokeStyle","strokeWidth","fillStyle","line","beginX","beginY","closeX","closeY","opacity","circle","x","y","radius","moveX","moveY","color","num","max","min","Math","floor","random","drawCricle","cxt","beginPath","arc","PI","fill","closePath","drawLine","moveTo","lineTo","stroke","draw","point","circles","clearRect","width","height","e","i","j","A","abs","B","C","sqrt","lineOpacity","init","push","concat","drawTime","_this2","window","innerWidth","innerHeight","document","getElementById","setInterval","cir","clearInterval","react_default","a","createElement","className","id","children","PureComponent","FormItem","es_form","Item","validate","rules","params","objectSpread","Login","login","_this$props","history","form","userLogin","validateFields","error","setState","loading","callback","response","setCookie","key","value","data","hours","message","success","errCallback","state","formatMessage","intl","getFieldDecorator","layouts_LayLogin","index_es","required","input","prefix","icon","type","style","placeholder","onPressEnter","es_button","block","onClick","Component","IntlLogin","injectIntl","FormIntlLogin","create","connect","dispatch","user"],"mappings":"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","file":"static/js/5.5900e5de.chunk.js","sourcesContent":["import LayLogin from './LayLogin.jsx';\r\n\r\nexport default LayLogin;","//基础模块\r\nimport React, {PureComponent} from 'react';\r\n\r\n//样式\r\nimport './style/LayLogin.css';\r\n\r\n\r\nexport default class LayLogin extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.width = 0;\r\n    this.height = 0;\r\n    this.point = 35;\r\n    \r\n    this.canvas = null;\r\n    this.context = null;\r\n    this.circles = [];\r\n    this.drawTime = null;\r\n  };\r\n  \r\n  componentDidMount() {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    \r\n    this.width = width;\r\n    this.height = height;\r\n    \r\n    const canvas = document.getElementById('MyCanvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    this.canvas = canvas;\r\n    \r\n    this.getContext();\r\n    \r\n    this.init();\r\n    this.drawTime = setInterval(() => {\r\n      for (let i = 0; i < this.point; i++) {\r\n        let cir = this.circles[i];\r\n        cir.x += cir.moveX;\r\n        cir.y += cir.moveY;\r\n        if (cir.x > width) cir.x = 0;\r\n        else if (cir.x < 0) cir.x = width;\r\n        if (cir.y > height) cir.y = 0;\r\n        else if (cir.y < 0) cir.y = height;\r\n      }\r\n      this.draw();\r\n    }, 50);\r\n  };\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.drawTime);\r\n  };\r\n  \r\n  getContext = () => {\r\n    const context = this.canvas.getContext('2d');\r\n    context.strokeStyle = 'rgba(0, 0, 0, 0.2)';\r\n    context.strokeWidth = 1;\r\n    context.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n    return this.context = context;\r\n  };\r\n  \r\n  //线条：开始xy坐标，结束xy坐标，线条透明度\r\n  line = (beginX, beginY, closeX, closeY, opacity) => {\r\n    return {\r\n      beginX,\r\n      beginY,\r\n      closeX,\r\n      closeY,\r\n      opacity,\r\n    };\r\n  };\r\n  \r\n  //点：圆心xy坐标，半径，每帧移动xy的距离\r\n  circle = (x, y, radius, moveX, moveY, color) => {\r\n    return {\r\n      x,\r\n      y,\r\n      radius,\r\n      moveX,\r\n      moveY,\r\n      color,\r\n    };\r\n  };\r\n  \r\n  //生成max和min之间的随机数\r\n  num = (max, min) => {\r\n    min = min || 0;\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  // 绘制原点\r\n  drawCricle = (cxt, x, y, radius, moveX, moveY, color) => {\r\n    let circle = this.circle(x, y, radius, moveX, moveY, color);\r\n    cxt.beginPath();\r\n    cxt.fillStyle = circle.color;\r\n    cxt.arc(circle.x, circle.y, circle.radius, 0, 2 * Math.PI);\r\n    cxt.fill();\r\n    cxt.closePath();\r\n    return circle;\r\n  };\r\n  \r\n  //绘制线条\r\n  drawLine = (cxt, beginX, beginY, closeX, closeY, opacity) => {\r\n    let line = this.line(beginX, beginY, closeX, closeY, opacity);\r\n    cxt.beginPath();\r\n    cxt.strokeStyle = 'rgba(0, 0, 0, ' + opacity + ')';\r\n    cxt.moveTo(line.beginX, line.beginY);\r\n    cxt.lineTo(line.closeX, line.closeY);\r\n    cxt.closePath();\r\n    cxt.stroke();\r\n  };\r\n  \r\n  //每帧绘制\r\n  draw = () => {\r\n    let context = this.context;\r\n    const canvas = this.canvas;\r\n    const point = this.point;\r\n    const circles = this.circles;\r\n    \r\n    try {\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n    } catch (e) {\r\n      context = this.getContext();\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n    \r\n    for (let i = 0; i < point; i++) {\r\n      let circle = circles[i];\r\n      this.drawCricle(\r\n        context,\r\n        circle.x,\r\n        circle.y,\r\n        circle.radius,\r\n        null,\r\n        null,\r\n        circle.color,\r\n      );\r\n    }\r\n    \r\n    for (let i = 0; i < point; i++) {\r\n      for (let j = 0; j < point; j++) {\r\n        if (i + j < point) {\r\n          let A = Math.abs(circles[i + j].x - circles[i].x);\r\n          let B = Math.abs(circles[i + j].y - circles[i].y);\r\n          let lineLength = Math.sqrt(A * A + B * B);\r\n          let C = 1 / lineLength * 7 - 0.009;\r\n          let lineOpacity = C > 0.03 ? 0.03 : C;\r\n          \r\n          if (lineOpacity > 0) {\r\n            this.drawLine(\r\n              context,\r\n              circles[i].x,\r\n              circles[i].y,\r\n              circles[i + j].x,\r\n              circles[i + j].y,\r\n              lineOpacity\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  //初始化生成原点\r\n  init = () => {\r\n    const circles = [];\r\n    for (let i = 0; i < this.point; i++) {\r\n      circles.push(this.drawCricle(\r\n        this.context,\r\n        this.num(this.width),\r\n        this.num(this.height),\r\n        this.num(15, 2),\r\n        this.num(20, -20) / 40,\r\n        this.num(20, -20) / 40,\r\n        `rgba(${ this.num(255) }, ${ this.num(255) }, ${ this.num(255) }, .15)`\r\n      ));\r\n    }\r\n    this.circles = circles;\r\n    this.draw();\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"login-layout\">\r\n        <canvas id=\"MyCanvas\"/>\r\n        <div className=\"login-layout__content\">\r\n          { this.props.children }\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};","//基础模块\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//方法\r\nimport { setCookie } from '@/utils/cookie';\r\n\r\n//UI库组件\r\nimport { Form, Input, Icon, Button, message } from 'antd';\r\n\r\n//多语言组件\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\n\r\n//公共组件\r\nimport LayLogin from '@/layouts/LayLogin';\r\n\r\n//样式\r\nimport './style/Login.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n//验证必填项函数\r\nconst validate = (rules, params) => {\r\n  return {\r\n    rules,\r\n    ...params\r\n  };\r\n};\r\n\r\n\r\nclass Login extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n    intl: PropTypes.object,\r\n    form: PropTypes.object,\r\n    userLogin: PropTypes.func,\r\n  };\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n    };\r\n  };\r\n  \r\n  login = () => {\r\n    const { history, form, userLogin } = this.props;\r\n\r\n    form.validateFields((error, params) => {\r\n      if (!error) {\r\n        this.setState({ loading: true });\r\n        userLogin({\r\n          params,\r\n          callback: response => {\r\n            setCookie({ key: 'token', value: response.data.id, hours: 0.5 });\r\n            message.success(response.message);\r\n            this.setState({ loading: false });\r\n            history.push('/main');\r\n          },\r\n          errCallback: error => {\r\n            message.error(error.message);\r\n            this.setState({ loading: false });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { formatMessage } = this.props.intl;\r\n    const { getFieldDecorator } = this.props.form;\r\n    \r\n    return (\r\n      <LayLogin>\r\n        <Form>\r\n          <h3 className=\"login__title\">\r\n            <FormattedMessage id=\"login.title\" />\r\n          </h3>\r\n          \r\n          <FormItem>\r\n            {\r\n              getFieldDecorator('username', validate([\r\n                { required: true, message: '账号不能为空' },\r\n              ]))(\r\n                <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0, 0, 0, .25)' }} />}\r\n                  placeholder={ formatMessage({ id: 'login.username' }) }\r\n                  onPressEnter={ this.login }\r\n                />\r\n              )\r\n            }\r\n          </FormItem>\r\n  \r\n          <FormItem>\r\n            {\r\n              getFieldDecorator('password', validate([\r\n                { required: true, message: '密码不能为空' },\r\n              ]))(\r\n                <Input\r\n                  prefix={ <Icon type=\"lock\" style={{ color: 'rgba(0, 0, 0, .25)' }} /> }\r\n                  placeholder={ formatMessage({ id: 'login.password' }) }\r\n                  type=\"password\"\r\n                  onPressEnter={ this.login }\r\n                />\r\n              )\r\n            }\r\n          </FormItem>\r\n        </Form>\r\n        \r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          loading={ this.state.loading }\r\n          onClick={ this.login }\r\n        >\r\n          <FormattedMessage id=\"login.loginText\"/>\r\n        </Button>\r\n      </LayLogin>\r\n    );\r\n  };\r\n}\r\n\r\nconst IntlLogin = injectIntl(Login);\r\n\r\nconst FormIntlLogin = Form.create()(IntlLogin);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  userLogin: dispatch.user.userLogin,\r\n});\r\n\r\nexport default connect(\r\n  () => ({}),\r\n  mapDispatchToProps\r\n)(FormIntlLogin);","import Login from './Login.jsx';\r\n\r\nexport default Login;"],"sourceRoot":""}