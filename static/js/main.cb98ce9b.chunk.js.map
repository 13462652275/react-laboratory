{"version":3,"sources":["utils/prototype.js","serviceWorker.js","store/modules/emums.js","store/modules/user.js","store/index.js","App.jsx","language/locale/EN_US/index.js","language/locale/ZH_CN/index.js","language/Language.jsx","language/index.js","index.js","mock/config.js","mock/login/index.js","mock/users/index.js","api/address.js","api/config.js","api/login/index.js","api/users/index.js","api/index.js","router/RouterView.jsx","router/config.js","router/main/index.js","router/index.js","../external \"one\""],"names":["Array","prototype","insertionSearch","item","mid","element","attribute","_this","this","low","high","length","arrayItem","index","key","Math","floor","Date","format","fmt","date","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","console","area","log","info","apply","undefined","arguments","Boolean","window","location","hostname","match","emums","state","Emums","user","language","id","username","permission","reducers","update_user","data","effects","getUserLogin","params","rootState","callback","errCallback","password","login","then","response","success","code","error","store","init","models","dispatch","getState","App","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closeLoading","screenLoading","document","getElementById","showLoading","body","removeChild","onBeforeEach","to","from","history","onAfterEach","loading","one","react_default","a","createElement","HashRouter","router","routes","PureComponent","connect","en","name","shortName","fileName","locale","objectSpread","Login","zh","addLocaleData","toConsumableArray","concat","Language","_ref","children","index_es","navigator","messages","localeLanguage","split","languages","e","chooseLocale","ReactDOM","render","es","src_language","src_App","serviceWorker","ready","registration","unregister","mock","MockAdapter","localeMock","delayResponse","Users","admin","manager","onPost","reply","config","Promise","resolve","reject","JSON","parse","message","_params","onGet","Data","map","i","Random","guid","roId","age","integer","address","county","_config$params","page","size","iLength","push","address_env","process","ADDRESS_ENV","seal","DEBUG_DEV_ADDRESS","LOCALE_MOCK_ADDRESS","EASY_MOCK_ADDRESS","MAIN_PROD_ADDRESS","axios","create","baseURL","headers","Content-Type","easyMock","http","forEach","instance","interceptors","use","cancelToken","method","url","getUserList","__webpack_require__","d","__webpack_exports__","login_login","users_getUserList","require","RouterView","nextProps","is","fromJS","nextState","_ref2","Switch","Route","exact","strict","path","redirect","Redirect","component","assign","defaultProps","withRouter","onClick","retry","pastDelay","NProgress","start","loaded","done","default","AsyncLoad","loader","Loadable","main","title","bind","all","router_RouterView","handleRoutes","parentPath","route","module","exports"],"mappings":"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","file":"static/js/main.cb98ce9b.chunk.js","sourcesContent":["// 插值搜索（ 该方法在已排序的数组性能好，非已排序的请用 findIndex ）\r\nArray.prototype.insertionSearch = function (item) {\r\n  let _this = this, low = 0, high = this.length - 1, mid, element, attribute;\r\n  const arrayItem = function (index) {\r\n    return attribute ? _this[index][attribute] : _this[index];\r\n  };\r\n\r\n  if (typeof item === 'object') {\r\n    for (let key in item) {\r\n      attribute = key;\r\n      item = item[key];\r\n      break;\r\n    }\r\n  }\r\n\r\n  while (low <= high) {\r\n    mid = Math.floor(low + (item - arrayItem(low)) / (arrayItem(high) - arrayItem(low)) * (high - low));\r\n\r\n    element = arrayItem(mid);\r\n\r\n    if (element < item) {\r\n      low = mid + 1;\r\n    } else if (element > item) {\r\n      high = mid - 1;\r\n    } else {\r\n      return mid;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\n// 日期格式化\r\nDate.prototype.format = function (fmt) {\r\n  const date = {\r\n    'M+': this.getMonth() + 1, //月\r\n    'd+': this.getDate(), //日\r\n    'h+': this.getHours(), //时\r\n    'm+': this.getMinutes(), //分\r\n    's+': this.getSeconds(), //秒\r\n    'q+': Math.floor((this.getMonth() + 3) / 3), //季度\r\n    'S': this.getMilliseconds() //毫秒\r\n  };\r\n\r\n  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n\r\n  for (let key in date) {\r\n    if (new RegExp('(' + key + ')').test(fmt)) {\r\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (date[key]) : (('00' + date[key]).substr(('' + date[key]).length)));\r\n    }\r\n  }\r\n  return fmt;\r\n};\r\n\r\nconsole.area = function () {\r\n  console.log('\\n');\r\n  console.log('-- start --');\r\n  console.info.apply(undefined, arguments);\r\n  console.log('--  end  --');\r\n  console.log('\\n');\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","'use strict';\r\n\r\nimport Emums from '@/Emums.json';\r\n\r\nconst emums = {\r\n  state: {\r\n    Emums,\r\n  },\r\n};\r\n\r\nexport default emums;","//API\r\nimport { login } from '@/api';\r\n\r\n\r\nconst user = {\r\n  state: {\r\n    language: '',\r\n    id: '',\r\n    username: '',\r\n    permission: [],\r\n  },\r\n\r\n  reducers: {\r\n    update_user (state, data) {\r\n      for (let key in state) {\r\n        if (data[key]) state[key] = data[key];\r\n      }\r\n      return state;\r\n    },\r\n  },\r\n  \r\n  effects: {\r\n    getUserLogin (params, rootState, callback, errCallback) {\r\n      if (!params.username || !params.password) {\r\n        console.error('[ Login Error ]: Please confirm params is complete?', params);\r\n        return;\r\n      }\r\n  \r\n      login(params).then(response => {\r\n        if (response.success && response.code === '200') {\r\n          if (callback) callback(response);\r\n          this.update_user(response.data);\r\n        } else {\r\n          if (errCallback) errCallback(response);\r\n        }\r\n      }, error => {\r\n        console.error(error);\r\n        if (errCallback) errCallback(error);\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default user;","import { init } from '@rematch/core';\r\n\r\n//枚举\r\nimport emums from './modules/emums'\r\n\r\n//用户信息\r\nimport user from './modules/user';\r\n\r\n\r\nconst store = init({\r\n  models: {\r\n    emums,\r\n    user,\r\n  },\r\n});\r\n\r\nexport default store;\r\n\r\nexport const { dispatch, getState } = store;\r\n\r\n//获取\r\n//getState().user;\r\n\r\n//提交（同步和异步都是该方法提交，异步把后面的方法名换成异步的方法名就可以了）\r\n// dispatch.user.update_user(x, y);","//基础模块\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n//路由模块\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n//路由配置\r\nimport routes, { RouterView } from '@/router';\r\n\r\n//第三方模块\r\nimport NProgress from 'nprogress';\r\n\r\n//全局样式\r\nimport '@/styles';\r\n\r\n// import { languages } from '@/language';\r\n\r\nimport one from 'one';\r\n\r\n// console.log(languages, 20);\r\n\r\n\r\n\r\nclass App extends PureComponent {\r\n  static propTypes = {\r\n    update_user: PropTypes.func,\r\n  };\r\n  \r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  };\r\n  \r\n  componentDidMount () {\r\n    // console.log(this.props);\r\n    // const { update_user } = this.props;\r\n    // const closeLoading = () => {\r\n    this.closeLoading();\r\n    console.log(one)\r\n      // this.setState({ loading: false });\r\n    // };\r\n    //\r\n    // update_user(\r\n    //   { id: '1', username: 'admin' },\r\n    //   closeLoading,\r\n    //   error => {\r\n    //     closeLoading();\r\n    //\r\n    //   }\r\n    // );\r\n  };\r\n  \r\n  closeLoading = () => {\r\n    const screenLoading = document.getElementById('screen-loading');\r\n    const showLoading = document.getElementById('show-loading');\r\n  \r\n    if (screenLoading) {\r\n      document.body.removeChild(screenLoading);\r\n      document.body.removeChild(showLoading);\r\n    }\r\n  };\r\n  \r\n\tonBeforeEach = (to, from, history) => {\r\n    // NProgress.start();\r\n\t};\r\n  \r\n  onAfterEach = (to, from, history) => {\r\n    // setTimeout(NProgress.done, 300);\r\n    // NProgress.done();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <RouterView \r\n        \troutes={ routes } \r\n        \tonBeforeEach={ this.onBeforeEach }\r\n          onAfterEach={ this.onAfterEach }\r\n        />\r\n      </Router>\r\n    );\r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  const { update_user } = dispatch.user;\r\n  return {\r\n    update_user,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);","//Login\r\nimport Login from './Login.json';\r\n\r\n\r\n\r\nexport const en = {\r\n  name: 'English',\r\n  shortName: 'EN',\r\n  fileName: 'EN_US',\r\n  locale: {\r\n    ...Login,\r\n  },\r\n};","//Login\r\nimport Login from './Login.json';\r\n\r\nexport const zh = {\r\n  name: '简体中文',\r\n  shortName: 'ZH',\r\n  fileName: 'ZH_CN',\r\n  locale: {\r\n    ...Login,\r\n  },\r\n};","//基础模块\r\nimport React from 'react';\r\n\r\n//多语言\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\n\r\n//时间格式，数字格式等。\r\nimport en from 'react-intl/locale-data/en';\r\nimport zh from 'react-intl/locale-data/zh';\r\n\r\n//本地语言\r\nimport * as languages from './locale';\r\n\r\naddLocaleData([ ...en, ...zh ]);\r\n\r\nconst chooseLocale = () => {\r\n  const localeLanguage = navigator.language.split('-')[0];\r\n  let language = {};\r\n  try {\r\n    language = languages[ localeLanguage ].locale;\r\n  } catch (e) {\r\n    console.error('[ Language Error ]: not found locale language');\r\n    language = {};\r\n  };\r\n  \r\n  return language;\r\n};\r\n\r\n\r\n\r\nconst Language = ({ children }) => (\r\n  <IntlProvider\r\n    locale={ navigator.language }\r\n    messages={ chooseLocale() }\r\n  >\r\n    { children }\r\n  </IntlProvider>\r\n);\r\n\r\nexport default Language;","import Language from './Language.jsx';\r\n\r\n// import * as languages from './locale';\r\n// import { en } from './locale';\r\n\r\n// console.log(languages, 8);\r\nimport * as languages from './locale';\r\n// console.log(languages, 12);\r\n\r\nexport default Language;\r\nexport { languages };\r\n\r\n\r\n\r\n","//service worker\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//基础模块\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//Redux状态库\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n//入口组件\r\nimport App from './App';\r\n\r\n//多语言\r\nimport Language from './language'\r\n\r\n//原型链方法\r\nimport './utils/prototype';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <Language>\r\n      <App />\r\n    </Language>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();","import { localeMock } from '@/api';\r\nimport MockAdapter from 'axios-mock-adapter';\r\n\r\n\r\nlet mock = new MockAdapter(localeMock, { delayResponse: 1500 });\r\n\r\n\r\nexport default mock;\r\n","// import { Random } from 'mockjs';\r\nimport mock from '@/mock/config';\r\n\r\nconst Users = {\r\n  admin: {\r\n    id: 'b920FfDB-63f7-dFf5-f8bb-36338ccff84B',\r\n    password: '123456',\r\n    permission: []\r\n  },\r\n  \r\n  manager: {\r\n    id: 'a3Ac3dAD-f6Ba-B04C-ae81-16D6e4A85fB8',\r\n    password: '123456',\r\n    permission: []\r\n  },\r\n};\r\n\r\n\r\n//登录\r\nmock.onPost('/login').reply(config => {\r\n  return new Promise((resolve, reject) => {\r\n    let params = null;\r\n    try {\r\n      params = JSON.parse(config.data);\r\n    } catch (e) {\r\n      reject([ 200, { code: '500', success: false, data: [], message: '参数解析失败' } ]);\r\n      return;\r\n    }\r\n    \r\n    const { username, password } = params;\r\n  \r\n    if (Users[username] && Users[username].password === password) {\r\n      resolve([ 200, {\r\n        code: '200',\r\n        success: true,\r\n        data: {\r\n          id: Users[username].id,\r\n          username,\r\n          permission: Users[username].permission\r\n        },\r\n        message: '登录成功'\r\n      } ]);\r\n    } else {\r\n      resolve([ 200, {\r\n        code: '500',\r\n        success: false,\r\n        data: null,\r\n        message: '请检查账号或密码是否正确'\r\n      } ]);\r\n    }\r\n  });\r\n});\r\n\r\n//获取用户信息\r\nmock.onGet('/user/info').reply(config => {\r\n  let params = config.data;\r\n  console.log('mock login ', config);\r\n  return new Promise((resolve, reject) => {\r\n    let data = [];\r\n    \r\n    resolve([ 200, { code: '200', success: true, data, message: '登录成功' } ]);\r\n  });\r\n});","import { Random } from 'mockjs';\r\nimport mock from '@/mock/config';\r\n\r\nlet Data = Array.apply(null, { length: 100 }).map((item, i) => {\r\n  return {\r\n    id: Random.guid(),\r\n    roId: Random.guid(),\r\n    name: Random.name(),\r\n    age: Random.integer(20, 50),\r\n    address: Random.county(true),\r\n  }; \r\n});\r\n\r\n\r\n//获取人员列表\r\nmock.onGet('/user/list').reply(config => {\r\n  let { page, size } = config.params;\r\n\r\n  let data = [];\r\n\r\n  for (let i = page - 1, iLength = Data.length; i < page * size && i < iLength; i ++) {\r\n    data.push(Data[i]);\r\n  }\r\n\r\n  return [ 200, { code: '200', success: true, data, message: '' } ];\r\n});","//当执行脚本时可以使用一下变量来确认环境\r\n// process.env.NODE_ENV   Node环境变量\r\n// process.env.ADDRESS_ENV  通过package.json中scripts命令中的 set [key]=[value] 可以获取，这里是自定义变量\r\n// process.env.npm_lifecycle_event  执行npm run xxx 的package.json中scripts对应的脚本名称。\r\n// 例如\"build\": \"react-app-rewired build\",，脚本名称就是build\r\n// process.PORT  调试时启用的端口\r\n\r\nlet address_env = process.env.ADDRESS_ENV;\r\n\r\nif (address_env !== 'test') {\r\n  address_env = process.env.NODE_ENV;\r\n}\r\n\r\n//命名方式  XXX_YYY_ADDRESS， XXX 地址名称，YYY 地址所属服务。\r\nconst address = Object.seal({\r\n  DEBUG_DEV_ADDRESS: null,  //联调地址\r\n  LOCALE_MOCK_ADDRESS: null,  //本地Mock地址\r\n  EASY_MOCK_ADDRESS: null,  //easy-mock地址\r\n  MAIN_PROD_ADDRESS: null,  //主要生产环境地址\r\n});\r\n\r\nswitch (address_env) {\r\n  //开发环境地址\r\n  case 'development':\r\n    address.DEBUG_DEV_ADDRESS = '/';\r\n    address.LOCALE_MOCK_ADDRESS = './';\r\n    address.EASY_MOCK_ADDRESS = 'https://www.easy-mock.com/mock/5bf3ee63f0beab552d8b6fef';\r\n    address.MAIN_PROD_ADDRESS = 'http://192.168.0.1';\r\n    break;\r\n    \r\n  //生产环境地址\r\n  case 'production':\r\n    address.DEBUG_DEV_ADDRESS = '/';\r\n    address.LOCALE_MOCK_ADDRESS = 'https://liuzane.github.io/react-laboratory';\r\n    address.EASY_MOCK_ADDRESS = 'https://www.easy-mock.com/mock/5bf3ee63f0beab552d8b6fef';\r\n    address.MAIN_PROD_ADDRESS = 'http://192.168.0.1';\r\n    break;\r\n    \r\n  //测试环境地址\r\n  case 'test':\r\n    address.DEBUG_DEV_ADDRESS = '/';\r\n    address.LOCALE_MOCK_ADDRESS = './';\r\n    address.EASY_MOCK_ADDRESS = 'https://www.easy-mock.com/mock/5bf3ee63f0beab552d8b6fef';\r\n    address.MAIN_PROD_ADDRESS = 'http://192.168.0.1';\r\n    break;\r\n    \r\n  //默认地址\r\n  default:\r\n    address.DEBUG_DEV_ADDRESS = '/';\r\n    address.LOCALE_MOCK_ADDRESS = './';\r\n    address.EASY_MOCK_ADDRESS = 'https://www.easy-mock.com/mock/5bf3ee63f0beab552d8b6fef';\r\n    address.MAIN_PROD_ADDRESS = 'http://192.168.0.1';\r\n    break;\r\n}\r\n\r\nexport default address;","import axios from 'axios';\r\nimport address from './address';\r\n\r\n//暴露初始实例\r\nexport default axios;\r\n\r\n\r\n//基本配置实例\r\nexport const localeMock = axios.create({\r\n  baseURL: address.LOCALE_MOCK_ADDRESS,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\nexport const easyMock = axios.create({\r\n  baseURL: address.EASY_MOCK_ADDRESS,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\nexport const http = axios.create({\r\n  baseURL: address.MAIN_PROD_ADDRESS,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\n\r\n//响应拦截器\r\nconst handleInterceptors = instances => {\r\n  instances.forEach(instance => {\r\n    instance.interceptors.response.use(function (response) {\r\n      // 对响应数据做点什么\r\n      return response.data;\r\n    }, function (error) {\r\n      // 对响应错误做点什么\r\n      return Promise.reject(error);\r\n    });\r\n  });\r\n};\r\n\r\nhandleInterceptors([ localeMock, easyMock, http ]);","//用户\r\nimport { localeMock } from '@/api/config';\r\n\r\n\r\n//登录\r\nexport const login = (data, cancelToken) => {\r\n  return localeMock({\r\n    method: 'post',\r\n    url: '/login',\r\n    data,\r\n    cancelToken,\r\n  });\r\n};\r\n\r\n//获取用户信息\r\nexport const getUserInfo = (params, cancelToken) => {\r\n  return localeMock({\r\n    method: 'get',\r\n    url: '/user/info',\r\n    params,\r\n    cancelToken,\r\n  });\r\n};","//用户\r\nimport { localeMock } from '@/api/config';\r\n\r\n\r\n//获取人员列表\r\nexport const getUserList = (params, cancelToken) => {\r\n  return localeMock({\r\n    method: 'get',\r\n    url: '/user/list',\r\n    params,\r\n    cancelToken,\r\n  });\r\n};","//暴露 config 中的实例\r\nexport { default } from './config';\r\nexport * from './config';\r\n\r\n//开启开发模式模拟数据\r\n// if (process.env.NODE_ENV === 'development') {\r\n  require('@/mock');\r\n// }\r\n\r\n//Login\r\nexport * from './login';\r\n\r\n//Users\r\nexport * from './users';","//基础模块\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//路由模块\r\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\r\n\r\n//第三方模块\r\nimport { fromJS, is } from 'immutable';\r\n\r\n\r\nclass RouterView extends PureComponent {\r\n  static propTypes = {\r\n    routes: PropTypes.array,\r\n    onBeforeEach: PropTypes.func,\r\n    onAfterEach: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onBeforeEach: () => {},\r\n    onAfterEach: () => {},\r\n  };\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const [ to, from ] = [ nextProps.location, this.props.location ];\r\n    if (!is(fromJS(to), fromJS(from))) {\r\n      this.props.onBeforeEach(to, from, this.props.history);\r\n    };\r\n  };\r\n  \r\n  componentDidUpdate (nextProps, nextState) {\r\n    const [ to, from ] = [ nextProps.location, this.props.location ];\r\n    if (!is(fromJS(to), fromJS(from))) {\r\n      this.props.onAfterEach(to, from, this.props.history);\r\n    };\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <Switch>\r\n        {\r\n          this.props.routes.map((item, index) => (\r\n            <Route \r\n              exact={ item.exact } \r\n              strict={ item.strict }\r\n              path={ item.path } \r\n              render={ \r\n                props => item.redirect \r\n                ? (<Redirect to={ item.redirect } />) \r\n                : (<item.component { ...props } routes={ item.children } />) \r\n              } \r\n              key={ index } \r\n            />\r\n          ))\r\n        }\r\n      </Switch>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withRouter(RouterView);","//基础模块\r\nimport React from 'react';\r\n\r\n//第三方模块\r\nimport Loadable from 'react-loadable';\r\nimport NProgress from 'nprogress';\r\n\r\n//Loading\r\nconst loading = props => {\r\n  if (props.error) {\r\n    return <div>Error! <button onClick={ props.retry }>Retry</button></div>;\r\n  } else if (props.pastDelay) {\r\n    NProgress.start();\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst render = (loaded, props) => {\r\n  NProgress.done();\r\n  return (<loaded.default { ...props } />)\r\n};\r\n\r\n\r\n//异步加载\r\nconst AsyncLoad = loader => Loadable({\r\n  loader,\r\n  loading,\r\n  render,\r\n});\r\n\r\nexport default AsyncLoad;","//异步路由\r\nimport AsyncLoad from '@/router/config';\r\n\r\nexport default [\r\n  {\r\n    path: '',\r\n    title: 'home',\r\n    component: AsyncLoad(() => import('@/pages/Main/Home')),\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    path: 'todo',\r\n    title: 'todo',\r\n    component: AsyncLoad(() => import('@/pages/Main/Todo')),\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    path: 'count-table',\r\n    title: 'count-table',\r\n    component: AsyncLoad(() => import('@/pages/Main/CountTable')),\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    path: 'less',\r\n    title: 'less',\r\n    component: AsyncLoad(() => import('@/pages/Main/Less')),\r\n    exact: true,\r\n  },\r\n  \r\n  {\r\n    path: 'typeof',\r\n    title: 'typeof',\r\n    component: AsyncLoad(() => import('@/pages/Main/Typeof')),\r\n    exact: true,\r\n  },\r\n];","//路由视图\r\nimport RouterView from './RouterView';\r\n\r\n//异步路由\r\nimport AsyncLoad from '@/router/config';\r\n\r\n//主路由配置\r\nimport main from './main';\r\n\r\n//所有路由配置\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    strict: true,\r\n    component: AsyncLoad(() => import('@/pages/Login')),\r\n  },\r\n  \r\n  {\r\n    path: '/main',\r\n    title: '首页',\r\n    strict: true,\r\n    component: AsyncLoad(() => import('@/pages/Main')),\r\n    children: main,\r\n  },\r\n\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    redirect: '/main',\r\n  },\r\n\r\n  // 404 未找到页面\r\n  {\r\n    path: '',\r\n    component: AsyncLoad(() => import('@/layouts/NotFound')),\r\n  },\r\n];\r\n\r\nconst handleRoutes = (routes, parentPath) => {\r\n  return routes.map(route => {\r\n    if (parentPath && route.path.substr(0, 1) !== '/') route.path = parentPath + (route.path === '' ? '' : '/' + route.path);\r\n    if (route.children) handleRoutes(route.children, route.path);\r\n    return route;\r\n  });\r\n};\r\n\r\nexport default handleRoutes(routes);\r\n\r\n//路由视图\r\nexport { \r\n  RouterView, \r\n  main,\r\n};\r\n// export * as RouterView from './RouterView';","module.exports = one;"],"sourceRoot":""}